<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    					http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-autowire="byName">

    <context:component-scan base-package="com.backkey"/>
    <!-- 数据库配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://proxy.backkey.com:3306/y0"/>
        <property name="username" value="root"/>
        <property name="password" value="ca$hc0w"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="2"/>
        <property name="minIdle" value="2"/>
        <property name="maxActive" value="20"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="typeAliasesPackage" value="com.backkey.bean"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.backkey.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--&lt;!&ndash; Redis &ndash;&gt;-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="8"/>-->
    <!--<property name="maxIdle" value="8"/>-->
    <!--<property name="minIdle" value="0"/>-->
    <!--<property name="testOnBorrow" value="true"/>-->
    <!--</bean>-->
    <!--<bean id="stringRedisSerializer"-->
    <!--class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
    <!--&lt;!&ndash; Short Url&ndash;&gt;-->
    <!--<bean id="jedisConnectionFactory_ShortUrl"-->
    <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
    <!--<property name="hostName" value="192.168.1.121"/>-->
    <!--<property name="port" value="6379"/>-->
    <!--<property name="timeout" value="1200"/>-->
    <!--<property name="usePool" value="true"/>-->
    <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
    <!--</bean>-->
    <!--<bean id="stringRedisTemplate_ShortUrl" class="org.springframework.data.redis.core.StringRedisTemplate">-->
    <!--<property name="connectionFactory" ref="jedisConnectionFactory_ShortUrl"/>-->
    <!--</bean>-->
    <!--<bean id="redis_ShortUrl" class="cn.y0.dao.utils.RedisImpl">-->
    <!--<property name="stringRedisTemplate" ref="stringRedisTemplate_ShortUrl"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash; Cache&ndash;&gt;-->
    <!--<bean id="jedisConnectionFactory_Cache"-->
    <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
    <!--<property name="hostName" value="192.168.1.121"/>-->
    <!--<property name="port" value="6379"/>-->
    <!--<property name="timeout" value="2000"/>-->
    <!--<property name="usePool" value="true"/>-->
    <!--<property name="poolConfig" ref="jedisPoolConfig"/>-->
    <!--</bean>-->
    <!--<bean id="stringRedisTemplate_Cache" class="org.springframework.data.redis.core.StringRedisTemplate">-->
    <!--<property name="connectionFactory" ref="jedisConnectionFactory_Cache"/>-->
    <!--</bean>-->
    <!--<bean id="redis_Cache" class="cn.y0.dao.utils.RedisImpl">-->
    <!--<property name="stringRedisTemplate" ref="stringRedisTemplate_Cache"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash; special DAO &ndash;&gt;-->
    <!--<bean id="redirectLogDAO" class="cn.y0.dao.impl.RedirectLogDAOImpl" scope="prototype" destroy-method="close"/>-->
</beans>